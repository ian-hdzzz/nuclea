
<head>
    <link rel="stylesheet" href="/css/interview2.css">
</head>
<!-- employee-evaluation.hbs -->
<div class="evaluation-container">
  <h1>Evaluación del empleado</h1>
  
  <p class="evaluation-instruction">Evalúa del 1 al 5 los siguientes aspectos:</p>
  
  <div class="evaluation-field">
    <label for="workload">Carga de trabajo</label>
    <div class="select-wrapper">
      <select id="workload" name="workload">
        <option value="1">1</option>
        <option value="2" selected>2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
      </select>
      <div class="select-arrow"></div>
    </div>
  </div>
  
  <div class="evaluation-field">
    <label for="health">Salud</label>
    <div class="select-wrapper">
      <select id="health" name="health">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5" selected>5</option>
      </select>
      <div class="select-arrow"></div>
    </div>
  </div>
  
  <div class="evaluation-field">
    <label for="recognition">Reconocimiento</label>
    <div class="select-wrapper">
      <select id="recognition" name="recognition">
        <option value="1">1</option>
        <option value="2" selected>2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
      </select>
      <div class="select-arrow"></div>
    </div>
  </div>
  
  <div class="evaluation-field">
    <label for="emotional-health">Salud emocional</label>
    <div class="select-wrapper">
      <select id="emotional-health" name="emotional-health">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5" selected>5</option>
      </select>
      <div class="select-arrow"></div>
    </div>
  </div>
  
  <div class="evaluation-field">
    <label for="work-life-balance">Equilibrio trabajo-vida</label>
    <div class="select-wrapper">
      <select id="work-life-balance" name="work-life-balance">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5" selected>5</option>
      </select>
      <div class="select-arrow"></div>
    </div>
  </div>
  
  <h2>Visualización de resultados</h2>
  
  <div class="chart-container">
    <canvas id="radar-chart"></canvas>
  </div>
  <div class="button-container">

    <button id="go-back-btn" class="btn btn-secondary" type="button"><i class="fa-solid fa-caret-left"></i>Go back</button>
    <button id="save-button" class="btn btn-primary" >Guardar evaluación</button>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('radar-chart').getContext('2d');
    
    // Obtener los valores iniciales
    const workload = parseInt(document.getElementById('workload').value);
    const health = parseInt(document.getElementById('health').value);
    const recognition = parseInt(document.getElementById('recognition').value);
    const emotionalHealth = parseInt(document.getElementById('emotional-health').value);
    const workLifeBalance = parseInt(document.getElementById('work-life-balance').value);
    
    // Crear el gráfico
    const radarChart = new Chart(ctx, {
      type: 'radar',
      data: {
        labels: [
          'Carga de trabajo',
          'Salud',
          'Reconocimiento',
          'Salud emocional',
          'Equilibrio trabajo-vida'
        ],
        datasets: [{
          label: '',
          data: [workload, health, recognition, emotionalHealth, workLifeBalance],
          backgroundColor: 'rgba(65, 105, 225, 0.5)',
          borderColor: 'rgba(65, 105, 225, 0.8)',
          pointBackgroundColor: 'rgba(65, 105, 225, 1)',
          pointBorderColor: '#fff',
          pointHoverBackgroundColor: '#fff',
          pointHoverBorderColor: 'rgba(65, 105, 225, 1)'
        }]
      },
      options: {
        scales: {
          r: {
            min: 0,
            max: 5,
            ticks: {
              stepSize: 1,
              display: true,
              backdropColor: 'transparent'
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            angleLines: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            pointLabels: {
              color: 'rgba(255, 255, 255, 0.8)',
              font: {
                size: 12
              }
            }
          }
        },
        plugins: {
          legend: {
            display: false
          }
        }
      }
    });
    
    // Actualizar el gráfico cuando cambian los selectores
    const selects = document.querySelectorAll('select');
    selects.forEach(select => {
      select.addEventListener('change', function() {
        const workload = parseInt(document.getElementById('workload').value);
        const health = parseInt(document.getElementById('health').value);
        const recognition = parseInt(document.getElementById('recognition').value);
        const emotionalHealth = parseInt(document.getElementById('emotional-health').value);
        const workLifeBalance = parseInt(document.getElementById('work-life-balance').value);
        
        radarChart.data.datasets[0].data = [
          workload,
          health,
          recognition,
          emotionalHealth,
          workLifeBalance
        ];
        radarChart.update();
      });
    });
    
    // Botón de guardar
    document.getElementById('save-button').addEventListener('click', function() {
      alert('Evaluación guardada');
    });
  });
</script>