<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>{{title}}</title>
  <link rel="stylesheet" href="/css/dashboard.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gridstack@9.2.1/dist/gridstack.min.css" />
  <style>
    .grid-stack {
      background: #f5f5f5;
      margin: 30px auto;
      width: 90%;
    }
    .grid-stack-item-content {
      background: white;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      padding: 20px;
    }
  </style>
</head>
<body>
  <div class="loader-wrapper" id="loaderWrapper">
    <div class="loader-container">
      <div class="bars-loader">
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
      </div>
      <p class="loading-text">Loading...</p>
    </div>
  </div>

  <h1 class="title">Welcome to Flowit HRMS</h1>
  <p class="subtitle">A comprehensive solution for managing your company's human resources.</p>

  <button onclick="saveLayout()">Guardar Layout</button>

  <div class="grid-stack"></div>

  <script src="https://cdn.jsdelivr.net/npm/gridstack@9.2.1/dist/gridstack-all.js"></script>
  <script>
    const layout = {{{layout}}}; // viene desde el controlador como JSON

    document.addEventListener('DOMContentLoaded', () => {
      const grid = GridStack.init({
        float: true,
        resizable: { handles: 'all' }
      });

      const cards = [
        {
          id: 'departments',
          content: `
            <h2>Active Departments</h2>
            <div class="card-number">7</div>
            <a href="/nuclea/departament" class="card-link">See details →</a>
          `,
          icon: 'fa-building'
        },
        {
          id: 'vacations',
          content: `
            <h2>Remaining Vacation</h2>
            <div class="card-number">{{diasRestantes}}</div>
          `,
          icon: 'fa-plane-up'
        },
        {
          id: 'users',
          content: `
            <h2>Registered Users</h2>
            <div class="card-number">18</div>
            <a href="/nuclea/users" class="card-link">See details →</a>
          `,
          icon: 'fa-people-group'
        },
        {
          id: 'projects',
          content: `
            <h2>Ongoing Projects</h2>
            <div class="card-number">12</div>
            <a href="#" class="card-link">See details →</a>
          `,
          icon: 'fa-chart-simple'
        }
      ];

      // Si existe un layout personalizado, lo usamos
      if (layout && layout.length > 0) {
        layout.forEach((item) => {
          const card = cards.find(c => c.id === item.id);
          if (card) {
            const el = document.createElement('div');
            el.classList.add('grid-stack-item');
            el.setAttribute('gs-id', card.id);
            el.setAttribute('gs-x', item.x);
            el.setAttribute('gs-y', item.y);
            el.setAttribute('gs-w', item.w);
            el.setAttribute('gs-h', item.h);
            el.innerHTML = `
              <div class="grid-stack-item-content">
                <i class="fa-solid ${card.icon}"></i>
                ${card.content}
              </div>
            `;
            grid.addWidget(el);
          }
        });
      } else {
        // Layout por defecto
        cards.forEach((card, i) => {
          const el = document.createElement('div');
          el.classList.add('grid-stack-item');
          el.setAttribute('gs-id', card.id);
          el.setAttribute('gs-x', i * 3);
          el.setAttribute('gs-y', 0);
          el.setAttribute('gs-w', 3);
          el.setAttribute('gs-h', 2);
          el.innerHTML = `
            <div class="grid-stack-item-content">
              <i class="fa-solid ${card.icon}"></i>
              ${card.content}
            </div>
          `;
          grid.addWidget(el);
        });
      }

      window.saveLayout = function () {
        const layoutData = grid.save(false).map(item => ({
          id: item.id,
          x: item.x,
          y: item.y,
          w: item.w,
          h: item.h
        }));

        fetch('/dashboard/save-layout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ layout: layoutData })
        })
        .then(res => res.ok ? alert('Layout guardado') : alert('Error al guardar'))
        .catch(err => console.error(err));
      };
    });
  </script>
  <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
</body>
</html>