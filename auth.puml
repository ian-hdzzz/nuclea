@startuml
actor Navegador
boundary "Auth.routes" as AuthRoutes
boundary "dashboard.routes" as DashboardRoutes
control "Auth.controller" as AuthController
control "Dashboard.controller" as DashboardController
entity "Usuario.model" as UsuarioModel
boundary "dashboard.hbs" as DashboardHBS
entity "Request.model" as RequestModel
database sql

activate Navegador
Navegador -> AuthRoutes : POST(/nuclea/signup)
deactivate Navegador
activate AuthRoutes
AuthRoutes -> AuthController : postAuth(req,res)
deactivate AuthController
AuthController -> UsuarioModel : fechOne(req.body.email)
UsuarioModel -> sql : execute(SELECT * FROM Usuarios WHERE Correo_electronico=?,email)
sql --> UsuarioModel : Query ok
UsuarioModel --> AuthController : Promise
AuthController --> DashboardRoutes : res.redirect(/nuclea/dashboard)
DashboardRoutes -> DashboardController : getDashboard(req,res)
DashboardController -> UsuarioModel : fechDays(req.sessio.idUsuario)
UsuarioModel -> sql : execute(SELECT dias_vacaciones FROM Usuarios WHERE idUsuario=?,idUsuario)
sql --> UsuarioModel : Query ok
UsuarioModel --> DashboardController : Promesa
DashboardController -> DashboardHBS : res.render(/pages/dashboard)
DashboardHBS --> Navegador : HTML
@enduml